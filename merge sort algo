// merge sort algorithm

void merge(int arr[] , int low , int mid , int high){

    vector<int> temp;
    int i = low , j = mid+1 ;
    while( i <= mid && j <= high){
        if(arr[i] <= arr[j]){
            temp.push_back(arr[i]);
            i++;
        }
        else{
            temp.push_back(arr[j]);
            j++;
        }
    }
    while(i<= mid){
        temp.push_back(arr[i]);
        i++;
    }
    while(j<= high){
        temp.push_back(arr[j]);
        j++;
    }
    for(int k = low ; k<=high ; k++){
        arr[k] = temp[k-low];
    }
    return;
}

void mergeSort(int arr[] , int low , int high){
    if(low >= high) return;

    int mid = (low+high) / 2;

    mergeSort(arr , low , mid);
    mergeSort(arr , mid+1 , high);

    merge(arr, low , mid , high); 


    return;
}
